!!!
%html
  %head
    %title Requirement details
    %meta(name="layout" content="main")


  %r:require(module="showdown")
  %r:require(module="ace")
  :javascript
    window.onload = function() {
      // init empty diagram here and add some functionalities
      var diag = new AppUseCaseRO("container"); 
      var converter = new Showdown.converter();
      // init the diagram with xml structure here

      var textarea = $("#textarea-description").hide();
      var editor = ace.edit("description");
      var MarkdownMode = require("ace/mode/markdown").Mode;
      editor.setTheme("ace/theme/clouds_midnight");
      editor.getSession().setMode(new MarkdownMode());
      editor.getSession().setUseWrapMode(true);

      $("#update").click(function() {
        textarea.val(editor.getSession().getValue()); 
      });

      var reqId = $("#id").val();
      var reqUseCases = $.ajax({
        type: "GET",
        url: "http://reqmanager.herokuapp.com/requirement/getUseCases/" + reqId,
        cache: false
      }).done(function(xht){ 
        var dom = (new DOMParser()).parseFromString(diag.diagram.getXMLString(), "text/xml");
        var documentEle = dom.documentElement;
        var usecaseArray = documentEle.getElementsByTagName('UMLUseCase');
        console.log("usecaseArray: " + usecaseArray);

        console.log(diag.diagram);
        for(var i = 0; i < usecaseArray.length; i++) {
          
          console.log(usecaseArray[i].childNodes);
          
          for(var j = 0; j < usecaseArray[i].childNodes.length; j++) {
            
            console.log(usecaseArray[i].childNodes[j]);
            var itemValue = usecaseArray[i].childNodes[j].attributes.value;
            
            if(itemValue != undefined) {

              console.log("ITEM VALUE: " + itemValue.value);
              console.log("XHT: " + xht);
              console.log("xht array: " + xht[0]);

              console.log("INDEX OF: " + xht.indexOf(itemValue.value.toString()));

              if(xht.indexOf(itemValue.value.toString()) != -1) {

                console.log("THISISIT!!!!! : ");
                console.log(usecaseArray[i]);

                var divv = document.getElementById("ud_diagram_div");
                var foundUseCase = null;

                for(var k = 0; k < diag.diagram._nodes.length; k++) {
                  if(diag.diagram._nodes[k].getName().toString() === xht[xht.indexOf(itemValue.value.toString())]) {
                    foundUseCase = diag.diagram._nodes[k]; 
                  }
                };
              
                console.log(foundUseCase);

                if(foundUseCase) foundUseCase.setBackgroundColor("#F3F5BC");
                diag.diagram.draw();
              }
            }
          }
          
        }
      });
    }


  .container-fluid
    %h1 
      Requirement: ${requirement.title} 
      %small (${requirement.code})
    .row-fluid
      %span(class="badge badge-warning")
        ${requirement.useCases.size()}
      %strong use cases
      %span.label ${requirement.status}
      %g:form(action="update")
        %h3 Requirement description:
        %div
          %g:actionSubmit(id="update" action="update" class="btn btn-primary" value="Update")
            
          /%g:actionSubmit(id="edit" action="edit" class="btn btn-warning" value="Edit full requirement")
          %g:link(elementId="edit" id="${requirement.id}" action="edit" controller="requirement" class="btn btn-warning")
            Edit full requirement
        %g:hiddenField(name="id" value="${requirement.id}")
        %g:hiddenField(id='diagramXml' name="diagram.xmlString" value="${requirement.diagram?.xmlString}")
        %g:textArea(name="description" id="textarea-description" value="${requirement.description}")
      #desc-wrapper.span5
        #description ${requirement.description}
      .span6.well
        .row
          .span6
            %h3 Use case diagram:
            #container
              #ud_container_div(style="border: 1px solid #000;")
                #ud_diagram_div(style="position: relative;")
                  %canvas(id="c1" class="ud_diagram_canvas" style="position: absolute;" width="500")
                  %canvas(id="c2" class="ud_diagram_canvas" style="position: absolute;" width="500")
                %br(style="clear: both;")
          .span6
    .row-fluid
      .span5.offset3.useCases
        %g:if(test="${requirement.useCases}")
          %h2 Use Cases:
          %ul.unstyled
            %g:each(in="${requirement.useCases}" var="${useCase}")
              %li.well
                .title
                  %h4
                    ${useCase.title}
                    %small ${useCase.code}
                .maincontent
                  :javascript
                    var text = converter.makeHtml(${useCase.mainContent});
                    console.log(text)
                  ${useCase.mainContent} 
                .actions
                  %g:link(class="btn" controller="useCase" action="show" id="${useCase.id}") show
                  %g:link(class="btn" controller="useCase" action="edit" id="${useCase.id}") edit
